{"version":3,"sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/CollectionEventType.js","node_modules/ol/ObjectEventType.js","node_modules/ol/obj.js","node_modules/ol/events.js","node_modules/ol/functions.js","node_modules/ol/Disposable.js","node_modules/ol/events/Event.js","node_modules/ol/events/EventTarget.js","node_modules/ol/events/EventType.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/math.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/sphere.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/proj.js","node_modules/ol/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/webgl.js","node_modules/ol/has.js","node_modules/ol/ImageState.js","node_modules/ol/css.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/render/canvas.js","node_modules/ol/style/Image.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/Feature.js","node_modules/ol/GeolocationProperty.js","node_modules/ol/array.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/render/EventType.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/style/Text.js","node_modules/ol/Graticule.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/MapBrowserPointerEvent.js","node_modules/ol/pointer/EventType.js","node_modules/ol/pointer/EventSource.js","node_modules/ol/pointer/MouseSource.js","node_modules/ol/pointer/MsSource.js","node_modules/ol/pointer/NativeSource.js","node_modules/ol/pointer/PointerEvent.js","node_modules/ol/pointer/TouchSource.js","node_modules/ol/pointer/PointerEventHandler.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/View.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Group.js","node_modules/ol/size.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/layer/Layer.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/util.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/LayerType.js","node_modules/ol/layer/VectorRenderType.js","node_modules/ol/layer/Vector.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/loadingstrategy.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/quickselect/quickselect.js","node_modules/rbush/index.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Vector.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/reproj/common.js","node_modules/ol/render/Event.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/canvas/Map.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/canvas/IntermediateCanvas.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/render/ReplayGroup.js","node_modules/ol/render/ReplayType.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/replay.js","node_modules/ol/render/canvas/Replay.js","node_modules/ol/render/canvas/ImageReplay.js","node_modules/ol/render/canvas/LineStringReplay.js","node_modules/ol/render/canvas/PolygonReplay.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextReplay.js","node_modules/ol/render/canvas/ReplayGroup.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/VectorTileRenderType.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/Map.js","node_modules/ol/OverlayPositioning.js","node_modules/ol/Overlay.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/VectorImageTile.js","node_modules/ol/VectorTile.js","node_modules/ol/control/FullScreen.js","node_modules/ol/control/OverviewMap.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/control/ZoomSlider.js","node_modules/ol/control/ZoomToExtent.js","node_modules/ol/control.js","node_modules/ol/webgl/Shader.js","node_modules/ol/webgl/Fragment.js","node_modules/ol/webgl/Vertex.js","node_modules/ol/render/webgl/circlereplay/defaultshader.js","node_modules/ol/render/webgl/circlereplay/defaultshader/Locations.js","node_modules/ol/vec/mat4.js","node_modules/ol/render/webgl/Replay.js","node_modules/ol/render/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/render/webgl/CircleReplay.js","node_modules/ol/render/webgl/texturereplay/defaultshader.js","node_modules/ol/render/webgl/texturereplay/defaultshader/Locations.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/Context.js","node_modules/ol/render/webgl/TextureReplay.js","node_modules/ol/render/webgl/ImageReplay.js","node_modules/ol/geom/flat/topology.js","node_modules/ol/render/webgl/linestringreplay/defaultshader.js","node_modules/ol/render/webgl/linestringreplay/defaultshader/Locations.js","node_modules/ol/render/webgl/LineStringReplay.js","node_modules/ol/render/webgl/polygonreplay/defaultshader.js","node_modules/ol/render/webgl/polygonreplay/defaultshader/Locations.js","node_modules/ol/structs/LinkedList.js","node_modules/ol/render/webgl/PolygonReplay.js","node_modules/ol/style/Atlas.js","node_modules/ol/style/AtlasManager.js","node_modules/ol/render/webgl/TextReplay.js","node_modules/ol/render/webgl/ReplayGroup.js","node_modules/ol/render/webgl/Immediate.js","node_modules/ol/renderer/webgl/defaultmapshader.js","node_modules/ol/renderer/webgl/defaultmapshader/Locations.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/renderer/webgl/ImageLayer.js","node_modules/ol/renderer/webgl/Map.js","node_modules/ol/renderer/webgl/tilelayershader.js","node_modules/ol/renderer/webgl/tilelayershader/Locations.js","node_modules/ol/renderer/webgl/TileLayer.js","node_modules/ol/renderer/webgl/VectorLayer.js","node_modules/ol/WebGLMap.js","node_modules/ol/index.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/Tile.js","node_modules/ol/layer/Image.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","node_modules/ol/style/IconAnchorUnits.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/IconOrigin.js","node_modules/ol/style/Icon.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/VectorTile.js","node_modules/ol/layer.js","node_modules/ol/net.js","node_modules/ol/source/BingMaps.js","node_modules/ol/source/CartoDB.js","node_modules/ol/source/Cluster.js","node_modules/ol/reproj/Image.js","node_modules/ol/source/Image.js","node_modules/ol/uri.js","node_modules/ol/source/ImageArcGISRest.js","node_modules/ol/source/ImageCanvas.js","node_modules/ol/source/ImageMapGuide.js","node_modules/ol/source/ImageStatic.js","node_modules/ol/source/common.js","node_modules/ol/source/WMSServerType.js","node_modules/ol/source/ImageWMS.js","node_modules/pixelworks/lib/util.js","node_modules/pixelworks/lib/processor.js","node_modules/pixelworks/lib/index.js","node_modules/ol/source/Raster.js","node_modules/ol/source/Stamen.js","node_modules/ol/source/TileArcGISRest.js","node_modules/ol/source/TileDebug.js","node_modules/ol/source/TileJSON.js","node_modules/ol/source/TileWMS.js","node_modules/ol/source/UTFGrid.js","node_modules/ol/source/WMTSRequestEncoding.js","node_modules/ol/tilegrid/WMTS.js","node_modules/ol/source/WMTS.js","node_modules/ol/source/Zoomify.js","node_modules/ol/source.js","map.js"],"names":["inherits","childCtor","parentCtor","prototype","Object","create","constructor","getUid","uidCounter_","obj","ol_uid","VERSION","AssertionError","Error","code","path","message","split","call","name","__proto__","clear","getValues","isEmpty","assign","target","var_sources","arguments$1","arguments","TypeError","output","i","ii","length","source","key","hasOwnProperty","object","property","values","push","bindListener","findListener","getListeners","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","listenerObj","boundListener","evt","listener","bindTo","callOnce","listeners","opt_this","opt_setDeleteIndex","deleteIndex","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","keys","opt_once","addEventListener","indexOf","splice","TRUE","FALSE","UNDEFINED","Disposable","dispose","disposed_","disposeInternal","stopPropagation","preventDefault","Event","propagationStopped","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","this$1","propagate","pendingRemovals","hasListener","opt_type","index","unByKey","Observable","revision_","changed","EventType","CHANGE","getRevision","on","Array","isArray","len","once","un","getChangeEventType","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","ObjectEventType","PROPERTYCHANGE","set","opt_silent","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","LENGTH","insertAt","elem","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","j","opt_except","assert","assertion","errorCode","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","equals","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","coordinates","extent","_boundingExtentXYs","xs","ys","opt_extent","Math","min","apply","max","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","flatCoordinates","offset","end","stride","rings","callback","val","area","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","k","scale","sx","sy","translate","clamp","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","cosh","exp","pow","ceil","log","LN2","t","mat","maxRow","maxEl","abs","r","absValue","tmp","coef","l","m","angleInRadians","PI","angleInDegrees","a","b","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","geometry","projection","getType","GeometryType","GEOMETRY_COLLECTION","coords","jj","POINT","MULTI_POINT","LINE_STRING","LINEAR_RING","getCoordinates","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometries","getGeometries","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","lon","Units","METERS_PER_UNIT","DEGREES","FEET","METERS","USFEET","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","fromEPSG4326","toEPSG4326","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","input","opt_output","opt_dimension","dimension","halfSize","tan","atan","EPSG4326Projection","opt_axisOrientation","add","cache","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","addCommon","projections","projectionLike","opt_units","pointResolution","getter","vertices","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","forward","inverse","sourceProj","destProj","opt_projection","lonLat","equalUnits","sourceProjection","destinationProjection","transformFunc","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","reset","multiply","setFromArray","compose","invert","determinant","tmp_","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","dx1","dy1","dx2","dy2","det","tmpTransform","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","intersectsExtent","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","asString","asArray","normalize","toString","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","g","exec","hasAlpha","parseInt","substr","map","Number","asColorLike","isColorLike","CanvasPattern","CanvasGradient","createCanvasContext2D","opt_width","opt_height","canvas","width","height","getContext","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","context","MAX_TEXTURE_SIZE","EXTENSIONS","DEBUG","HAS","window","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","CLEAR","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","measureTextWidth","rotateAtOffset","drawImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","interval","referenceWidth","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","textContent","margin","padding","position","left","offsetX","offsetY","resetTransform","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","snapToPixel","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","thisArg","load","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","ImageState","LOADED","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","round","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","bind","id","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","toFunction","createDefaultStyle","createEditingStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","styleFunction","styles","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","white","blue","CIRCLE","concat","createStyleFunction","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","setId","binarySearch","haystack","needle","opt_comparator","low","mid","cmp","comparator","numberSafeCompareFunction","high","found","includes","linearFindNearest","direction","reverseSubArray","begin","data","extension","find","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","getStrideForLayout","transformGeom2D","SimpleGeometry","layout","GeometryLayout","XY","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","XYZ","XYZM","XYM","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","douglasPeucker","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","simplifiedEnds","simplifiedEndss","LinearRing","maxDelta_","maxDeltaRevision_","Point","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","point1","ret","point2","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","linearRingIsClockwise","linearRingIsOriented","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","edge","opt_right","right","isClockwise","circular","fromExtent","fromCircle","makeRegular","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","opt_n","opt_sphereRadius","circle","opt_sides","opt_angle","sides","arrayLength","polygon","startAngle","Geolocation","position_","transform_","watchId_","GeolocationProperty","PROJECTION","handleProjectionChanged_","TRACKING","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","POSITION","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","ACCURACY","accuracy","ALTITUDE","altitude","ALTITUDE_ACCURACY","altitudeAccuracy","HEADING","heading","longitude","latitude","projectedPosition","SPEED","speed","ACCURACY_GEOMETRY","error","ERROR","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","TRACKING_OPTIONS","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","squaredDistanceToSegment","toStringHDMS","toStringXY","delta","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","floor","sec","charAt","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","fraction","pointY","cumulativeLengths","o","extrapolate","lo","hi","m0","m1","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","greatCircleArc","meridian","parallel","line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","acos","cosD","sinD","theta","epsg4326Projection","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","setMap","addMeridian_","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","centerLonLat","cnt","centerLon","centerLat","validExtent","p1","p2","dist","getMap","getMeridians","getParallels","handlePostCompose_","labelData","vectorContext","frameState","viewState","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","geom","worldExtentP","render","RenderEventType","POSTCOMPOSE","ImageBase","state","pixelRatio_","getPixelRatio","getResolution","getState","ImageWrapper","src","crossOrigin","imageLoadFunction","IDLE","src_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","LOADING","LOAD","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","err","easeIn","easeOut","inAndOut","linear","upAndDown","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","getKey","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","setState","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","ABORT","naturalWidth","naturalHeight","EMPTY","ctx","fillRect","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","MapEvent","opt_frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","CLICK","DBLCLICK","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","clientX","clientY","cloneEvent","pd","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","out","over","enter","outEvent","outTarget","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","none","createSnapToResolutions","createSnapToPower","resolutions","z","power","maxResolution","opt_maxLevel","oldLevel","newLevel","disable","createSnapToN","createSnapToZero","opt_tolerance","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","CENTER","resolutionConstraintInfo","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","ROTATION","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","series","animation","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","complete","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","centerNone","defaultMaxResolution","defaultMinResolution","enableRotation","rotationNone","BaseLayer","LayerProperty","OPACITY","VISIBLE","visible","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","state_","getLayerState","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setVisible","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","layer","collectionEvent","states","pos","ownLayerState","layerState","SourceState","READY","num","hasArea","ratio","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MOUSEWHEEL","WHEEL","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","CONTEXTMENU","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","RESIZE","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","KEYDOWN","KEYPRESS","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","layerStatesArray","layerStates","pixelResolution","renderFrame","MapEventType","MOVESTART","MOVEEND","POSTRENDER","setLayerGroup","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","Control","target_","listenerKeys","visibleAtResolution","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getSource","handleSourceChange_","PRECOMPOSE","managed","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","pan","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","Interaction","setActive","InteractionProperty","ACTIVE","active","opt_duration","currentRotation","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","centroid","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","isPointerDraggingEvent","pointerEvents","handledUp","handled","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","BOXDRAG","BOXEND","BOXSTART","DragZoom","out_","mapExtent","boxPixelExtent","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","DOWN","UP","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MAX_DELTA","Mode","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","handleWheelZoom_","setMouseAnchor","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","TRACKPAD","rebound","timeLeft","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","result","formatConstructor","tryReadFeatures_","addFeatures","ADD_FEATURES","registerListeners_","dropArea","handleDrop","DRAGENTER","handleStop","DRAGOVER","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","MultiLineString","appendLineString","opt_interpolate","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","getPolygon","prevEnds","getPolygons","polygons","lastEnds","RenderType","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","VECTOR","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","loadFeaturesXhr","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","response","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","all","bbox","getZForResolution","tileRange","getTileRangeForExtentAndZ","extents","getTileCoordExtent","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","RBush","opt_maxEntries","rbush_","items_","insert","items","uid","getAll","getInExtent","search","forEach_","forEachInExtent","rbush","VectorSourceEvent","opt_feature","VectorSource","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","createRegularPolygon","createBox","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","DRAWSTART","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","DRAWEND","sketchFeatures","overlaySource","pass","handlePointerEvent","circleMode","boxCoordinates","ExtentEventType","ExtentInteractionEvent","EXTENTCHANGED","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","MODIFYSTART","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","lines","kk","centerSegmentData","circumferenceSegmentData","featureSegments","getGeometriesArray","createOrUpdateVertexFeature_","box","nodes","pointDistanceToSegmentDataSquared","closestOnSegmentData","vertexSegments","insertVertex_","depth","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","removeVertex_","MODIFYEND","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","closestVertex","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","Select","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","removeFeatureLayerAssociation_","SELECT","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","sortByDistance","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","updateFeature_","opt_unlisten","unregister","snapTo","lowerLeft","upperRight","snappedToVertex","snapped","isCircle","featuresToUpdate","deltaA","TranslateEventType","TranslateEvent","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","oldMap","TRANSLATESTART","TRANSLATEEND","newCoordinate","TRANSLATING","default","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","VectorContext","drawCustom","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterGroup","textStyle","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","sortByZIndex","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","skippedFeatureUids","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","expireIconCache","scheduleRemoveUnusedLayerRenderers","state1","state2","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","usedTiles","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","RENDER","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","IMAGE","mapRenderer","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","tileCoordKey","getGutter","drawTileImage","gutter","getOpaque","alphaChanged","TILE","ReplayGroup","getReplay","replayType","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","FILL","strokeInstruction","STROKE","beginPathInstruction","BEGIN_PATH","closePathInstruction","CLOSE_PATH","ORDER","ReplayType","DEFAULT","TEXT_ALIGN","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","lastRel","nextRel","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","CanvasInstruction","CUSTOM","endGeometry","BEGIN_GEOMETRY","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","DRAW_IMAGE","DRAW_CHARS","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","END_GEOMETRY","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","chunkStart","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","measureTextWidths","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","LINE","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","lineHeight","renderWidth","leftRight","currentWidth","getCircleArray","replayDeclutter","BATCH_CONSTRUCTORS","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","mask","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","zz","replayData","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","feature1","feature2","replayGroup","circleReplay","textReplay","loading","renderFeatureInternal","renderGeometry","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","dirty","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VECTOR_TILE","Map","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","mapPostrenderListenerKey","ELEMENT","handleElementChanged","MAP","handleMapChanged","OFFSET","handleOffsetChanged","handlePositionChanged","POSITIONING","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","CENTER_RIGHT","left_","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","top_","bottom","bottom_","CENTER_LEFT","getOptions","opt_tileCoord","getKeyZXY","fromKey","hash","quadKey","digits","String","fromCharCode","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","defaultLoadFunction","VectorImageTile","urlTileCoord","tileUrlFunction","sourceTiles","tileClass","replayState_","sourceTiles_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","forEachTileCoord","sourceExtent","sourceTileKey","tileUrl","consumers","finishLoading_","leftToLoad","errorSourceTiles","loaded","empty","onLoad","onError","DEFAULT_EXTENT","VectorTile","replayGroups_","setFeatures","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","isFullScreenSupported","keys_","handleFullScreen_","exitFullScreen","handleFullScreenChange_","firstElementChild","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","requestFullScreenWithKeys","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","MAX_RATIO","MIN_RATIO","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","updateBox_","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","METRIC","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","IMPERIAL","NAUTICAL","US","html","Direction","ZoomSlider","currentResolution_","direction_","VERTICAL","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerSize","thumb","thumbWidth","thumbHeight","HORIZONTAL","relativePosition","getRelativePosition_","getResolutionForPosition_","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","WebGLShader","isAnimated","WebGLFragment","WebGLVertex","fragment","DEBUG_WEBGL","Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FONT","DEFAULT_FILLSTYLE","DEFAULT_LINECAP","DEFAULT_LINEDASH","DEFAULT_LINEDASHOFFSET","DEFAULT_LINEJOIN","DEFAULT_MITERLIMIT","DEFAULT_STROKESTYLE","DEFAULT_TEXTALIGN","DEFAULT_TEXTBASELINE","DEFAULT_LINEWIDTH","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","numVertices","numIndices","lastState","fillColor","strokeColor","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","createEmptyTexture","createTexture","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","WEBGL_EXTENSIONS","getExtension","ContextEventType","LOST","handleWebGLContextLost","RESTORED","handleWebGLContextRestored","buf","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","texture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","createTextureInternal","opt_wrapS","opt_wrapT","texParameteri","texImage2D","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","BEGIN_LINE_CAP","BEGIN_LINE","END_LINE","END_LINE_CAP","BEVEL_FIRST","BEVEL_SECOND","MITER_BOTTOM","MITER_TOP","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","head","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","deltaWidth","newBlock1","newBlock2","updateBlocks_","args","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","WebGLTextReplay","measureCanvas_","currAtlas_","glyphAtlas","currX","currY","charArr","charInfo","textSize","getTextSize_","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","calculateHash_","HIT_DETECTION_SIZE","WebGLReplayGroup","functions","replayHitDetection_","Uint8Array","readPixels","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tmpSize_","framebufferExtent","getTileSize","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","scissor","WebGLMap","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","ImageLayer","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","sourceListenKey","createFromTemplate","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","urls","match","startCharCode","stopCharCode","stop","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","sizes","calculateTileRanges_","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","createForExtent","createXYZ","createForProjection","extentFromProjection","worldsAway","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","thisProj","getTileCoordForTileUrlFunction","TileSourceEvent","UrlTile","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","createTile_","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ATTRIBUTION","OSM","IconImage","imageState_","tainting_","determineTainting_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","iconImageCache","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","GRADIENT","handleGradientChanged_","setGradient","setBlur","BLUR","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","createGradient","view8","colors","createLinearGradient","step","addColorStop","VectorTileLayer","HYBRID","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","TOS_ATTRIBUTION","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","parse","tilesUrl","cdn_url","https","layergroupid","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","defaultImageLoadFunction","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","appendParams","uri","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","ratio_","getParams","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","baseParams","dpi","mcsW","mcsH","devW","devH","mpp","Static","targetWidth","DEFAULT_WMS_VERSION","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","v13_","updateV13_","serverType_","serverType","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","WMSServerType","GEOSERVER","MAPSERVER","CARMENTA_SERVER","QGIS","version","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","PIXEL","threads_","threads","renderers_","createRenderers","requestedFrameState_","renderedImageCanvas_","operation","setOperation","lib","opt_lib","Processor","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","BEFOREOPERATIONS","process","onWorkerComplete_","AFTEROPERATIONS","sharedContext","createTileRenderer","createImageRenderer","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","ProviderConfig","Stamen","provider","providerConfig","layerConfig","TileArcGISRest","tmpExtent_","getKeyForParams_","LabeledTile","strokeRect","TileDebug","textTileCoord","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","bounds","minzoom","maxzoom","attributionExtent","TileWMS","transparent","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","grid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","createFromCapabilitiesMatrixSet","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","matrixIdsPropName","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","optionsFromCapabilities","WMTS","requestEncoding","WMTSRequestEncoding","KVP","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","wmtsCap","tileMatrixSets","tileMatrixSet","supportedCRS","proj1","proj2","matrixSets","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","REST","localContext","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","TierSizeCalculation","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","TRUNCATED","tileCountUpToTier","tileCoordZ","tileIndex","ZoomifyTileClass","eqrecExtent","offsetExtent","offsetProj","eqrecProj","bordersTransform","bordersOffset","offsetBordersExtent","console","graticule"],"mappings":"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","file":"map.ab3caa91.map","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.1.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable () {};\n\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar EventTarget = (function (Disposable) {\n  function EventTarget() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) EventTarget.__proto__ = Disposable;\n  EventTarget.prototype = Object.create( Disposable && Disposable.prototype );\n  EventTarget.prototype.constructor = EventTarget;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  EventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EventTarget.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  EventTarget.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  EventTarget.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  EventTarget.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return EventTarget;\n}(Disposable));\n\n\nexport default EventTarget;\n\n//# sourceMappingURL=EventTarget.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array.<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object.<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object.<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object.<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object.<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Translate the geometry. This modifies the geometry coordinates in place.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array.<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array.<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        var width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.opacity_ = options.opacity;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n/**\n* Get the symbolizer opacity.\n* @return {number} Opacity.\n* @api\n*/\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n* Determine whether the symbolizer rotates with the map.\n* @return {boolean} Rotate with map.\n* @api\n*/\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the symoblizer rotation.\n* @return {number} Rotation.\n* @api\n*/\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the symbolizer scale.\n* @return {number} Scale.\n* @api\n*/\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Determine whether the symbolizer should be snapped to a pixel.\n* @return {boolean} The symbolizer should snap to a pixel.\n* @api\n*/\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return this.snapToPixel_;\n};\n\n/**\n* Get the anchor point in pixels. The anchor determines the center point for the\n* symbolizer.\n* @abstract\n* @return {Array.<number>} Anchor.\n*/\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n* Get the image element for the symbolizer.\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n* @abstract\n* @param {number} pixelRatio Pixel ratio.\n* @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n*/\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n* @abstract\n* @return {module:ol/ImageState} Image state.\n*/\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Image size.\n*/\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n* @abstract\n* @return {module:ol/size~Size} Size of the hit-detection image.\n*/\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n* Get the origin of the symbolizer.\n* @abstract\n* @return {Array.<number>} Origin.\n*/\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n* Get the size of the symbolizer (in pixels).\n* @abstract\n* @return {module:ol/size~Size} Size.\n*/\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n* Set the opacity.\n*\n* @param {number} opacity Opacity.\n* @api\n*/\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n* Set whether to rotate the style with the view.\n*\n* @param {boolean} rotateWithView Rotate with map.\n* @api\n*/\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number} rotation Rotation.\n* @api\n*/\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number} scale Scale.\n* @api\n*/\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set whether to snap the image to the closest pixel.\n*\n* @param {boolean} snapToPixel Snap to pixel?\n* @api\n*/\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @return {module:ol/events~EventsKey|undefined} Listener key.\n* @template T\n*/\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n* Load not yet loaded URI.\n* @abstract\n*/\nImageStyle.prototype.load = function load () {};\n\n/**\n* @abstract\n* @param {function(this: T, module:ol/events/Event)} listener Listener function.\n* @param {T} thisArg Value to use as `this` when executing `listener`.\n* @template T\n*/\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      snapToPixel: snapToPixel\n    });\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      snapToPixel: this.getSnapToPixel(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      snapToPixel: options.snapToPixel,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      snapToPixel: this.getSnapToPixel(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object.<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n//# sourceMappingURL=GeolocationProperty.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array.<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = (function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array.<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {module:ol/style/TextPlacement|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array.<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {module:ol/style/Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {module:ol/style/TextPlacement|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array.<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {module:ol/style/TextPlacement|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array.<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index];\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index];\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var this$1 = this;\n\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this$1.minLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this$1.maxLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this$1.minLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this$1.maxLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var this$1 = this;\n\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  var p1 = [];\n  /** @type {Array.<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    var delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this$1.fromLonLatTransform_(p1, p1);\n    this$1.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n    var this$1 = this;\n\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this$1.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this$1.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this$1.meridiansLabels_[i];\n      this$1.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this$1.parallelsLabels_[i];\n      this$1.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n  */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object.<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * @param {module:ol/TileState} state State.\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array.<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object.<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object.<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array.<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        series[0].callback(false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          setTimeout(function() {\n            callback(true);\n          }, 0);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array.<number>=} opt_hints Destination array.\n   * @return {Array.<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array.<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState () {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: center.slice(),\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : UNDEFINED;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      setTimeout(callback.bind(undefined, true), 0);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object.<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] =\n       options.zIndex !== undefined ? options.zIndex : 0;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex();\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array.<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('DIV');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('DIV');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('DIV');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection.<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object.<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState();\n      var focus = this.focus_;\n      if (!focus) {\n        focus = viewState.center;\n        var pixelResolution = viewState.resolution / this.pixelRatio_;\n        focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n        focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n      }\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: focus,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : UNDEFINED;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== UNDEFINED) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        layerState.zIndex = Infinity;\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('UL');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array.<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object.<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array.<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('LI');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array.<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array.<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      var formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      var format = new formatConstructor();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array.<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array.<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array.<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array.<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array.<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array.<Array.<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array.<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array.<Array.<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array.<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n  *     style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array.<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = UNDEFINED;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  return VectorSource;\n}(Source));\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  var this$1 = this;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (var i = 0, length = features.length; i < length; i++) {\n    var feature = features[i];\n    var featureKey = getUid(feature).toString();\n    if (this$1.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n    var feature$1 = newFeatures[i$1];\n    var featureKey$1 = getUid(feature$1).toString();\n    this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n    var geometry = feature$1.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature$1);\n    } else {\n      this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n    this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  var this$1 = this;\n\n  if (opt_fast) {\n    for (var featureId in this$1.featureChangeKeys_) {\n      var keys = this$1.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this$1.nullGeometryFeatures_) {\n        this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {module:ol/Feature} */ (event.target);\n  var featureKey = getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  var id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    var featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  var this$1 = this;\n\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var loop = function ( i, ii ) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  };\n\n  for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  var featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  var this$1 = this;\n\n  var removed = false;\n  for (var id in this$1.idIndex_) {\n    if (this$1.idIndex_[id] === feature) {\n      delete this$1.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    var sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  var move = event.type === MapBrowserEventType.POINTERMOVE;\n  var pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    var now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  var pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = coordinates[0];\n    var end = coordinates[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  var pixel = mapBrowserEvent.pixel;\n  var map = mapBrowserEvent.map;\n\n  var extent = this.getExtent();\n  var vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  var getOpposingPoint = function(point) {\n    var x_ = null;\n    var y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    var pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  var extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          this$1.overlay_.getSource().removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array.<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  var this$1 = this;\n\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this$1.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this$1.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this$1.insertVertex_.apply(this$1, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  var this$1 = this;\n\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this$1.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates = (void 0);\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this$1.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this$1.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this$1.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this$1.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this$1.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  var this$1 = this;\n\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    var segmentData = this$1.dragSegments_[i][0];\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  var featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageSnapToPixel_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (this$1.imageSnapToPixel_) {\n        x = Math.round(x);\n        y = Math.round(y);\n      }\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object.<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array.<number>} padding Padding.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array.<number>} dashArray Dash array.\n   * @return {Array.<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array.<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array.<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array.<*>} instructions Instructions array.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n   *     featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var snapToPixel = /** @type {boolean} */ (instruction[14]);\n          var width = /** @type {number} */ (instruction[15]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array.<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array.<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array.<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.snapToPixel_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.snapToPixel_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.snapToPixel_ = imageStyle.getSnapToPixel();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object.<string, Object.<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, true, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, true, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object.<string, boolean>} */\n    var features = {};\n\n    /** @type {Array.<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('DIV');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array.<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array.<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = (function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n    var this$1 = this;\n\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object.<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array.<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, UNDEFINED, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this$1.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this$1.tileKeys[i];\n      var sourceTile = this$1.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this$1.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {module:ol/VectorTile} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var this$1 = this;\n\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this$1.getTile(this$1.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar VectorTile = (function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/Feature>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/ReplayGroup>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {module:ol/extent~Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {module:ol/format/Feature} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {module:ol/proj/Projection} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @return {module:ol/render/ReplayGroup} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array.<module:ol/Feature>} features The loaded features.\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {module:ol/extent~Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {module:ol/proj/Projection} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = (function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    var button = document.createElement('button');\n    button.className = this.cssClassName_ + '-' + isFullScreen();\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.labelNode_);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var button = this.element.firstElementChild;\n    var map = this.getMap();\n    if (isFullScreen()) {\n      button.className = this.cssClassName_ + '-true';\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      button.className = this.cssClassName_ + '-false';\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = (function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('DIV');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {module:ol/Map}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(\n        /**\n         * @param {module:ol/layer/Layer} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('DIV');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {module:ol/Overlay}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {module:ol/View} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {module:ol/PluggableMap} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = (function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('DIV'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('DIV');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?module:ol/View~State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n        Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return (\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n    );\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var this$1 = this;\n\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this$1.element.style.display = 'none';\n        this$1.renderedVisible_ = false;\n        return;\n      } else if (width >= this$1.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = (function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {module:ol/size~Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n      var deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = (function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n\n//# sourceMappingURL=control.js.map","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n\n//# sourceMappingURL=Shader.js.map","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = (function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\n//# sourceMappingURL=Fragment.js.map","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = (function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\n//# sourceMappingURL=Vertex.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/render/webgl/Replay\n */\n\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = (function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {module:ol/render/webgl/LineStringReplay|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = (function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<Array.<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         strokeColor: (Array.<number>|null),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 0;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 1;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 2;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 3;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n      this$1.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array.<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n        this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\n//# sourceMappingURL=CircleReplay.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = (function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = String(getUid(buf));\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = String(getUid(buf));\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this$1.bufferCache_) {\n        gl.deleteBuffer(this$1.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this$1.programCache_) {\n        gl.deleteProgram(this$1.programCache_[key$1]);\n      }\n      for (var key$2 in this$1.shaderCache_) {\n        gl.deleteShader(this$1.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {module:ol/webgl/Shader} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = String(getUid(shaderObject));\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n   * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\n//# sourceMappingURL=Context.js.map","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = (function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this$1.origin[0];\n      y = flatCoordinates[i + 1] - this$1.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image).toString();\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this$1.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var this$1 = this;\n\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this$1.startIndicesFeature[featureIndex];\n\n        var featureUid = getUid(feature).toString();\n        if (skippedFeaturesHash[featureUid] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this$1.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this$1.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, groupStart, start, end, feature, featureUid;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this$1.hitDetectionGroupIndices[i - 1] : 0;\n      end = this$1.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {};\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\n//# sourceMappingURL=TextureReplay.js.map","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = (function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\n//# sourceMappingURL=topology.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = (function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array.<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this$1.indices[numIndices++] = n;\n          this$1.indices[numIndices++] = lastIndex - 1;\n          this$1.indices[numIndices++] = lastIndex;\n\n          this$1.indices[numIndices++] = lastIndex;\n          this$1.indices[numIndices++] = n + 1;\n          this$1.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastIndex - 1;\n        this$1.indices[numIndices++] = lastIndex;\n\n        this$1.indices[numIndices++] = n + 2;\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this$1.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this$1.indices[numIndices++] = n + 1;\n        this$1.indices[numIndices++] = n + 3;\n        this$1.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array.<number>} p0 Last coordinates.\n   * @param {Array.<number>} p1 Current coordinates.\n   * @param {Array.<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this$1.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this$1.origin[0], -this$1.origin[1]);\n          this$1.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this$1.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\n//# sourceMappingURL=LinkedList.js.map","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = (function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this$1.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this$1.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this$1.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this$1.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this$1.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this$1.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {module:ol/structs/LinkedList} list Linked list.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var this$1 = this;\n\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var start;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p0;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygons ring.\n   * @return {Array.<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this$1.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var this$1 = this;\n\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this$1.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var this$1 = this;\n\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this$1.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this$1.resolveSelfIntersections_(list, rtree)) {\n              simple = this$1.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this$1.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this$1.isClockwise_(list);\n                this$1.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var this$1 = this;\n\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this$1.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this$1.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this$1.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this$1.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this$1.indices[numIndices++] = p0.i;\n            this$1.indices[numIndices++] = p1.i;\n            this$1.indices[numIndices++] = p2.i;\n            this$1.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this$1.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this$1.vertices.length;\n        var numIndices = this$1.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this$1.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this$1.indices[numIndices++] = seg.p0.i;\n        this$1.indices[numIndices++] = seg.p1.i;\n        this$1.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this$1.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this$1.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this$1.vertices.length / 2;\n        var intersection = this$1.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this$1.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this$1.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this$1.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this$1.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this$1.classifyPoints_(list, rtree, false);\n        this$1.triangulate_(list, rtree);\n        this$1.classifyPoints_(newPolygon, newRtree, false);\n        this$1.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n    * @param {module:ol/structs/LinkedList} list Polygon ring.\n    * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var this$1 = this;\n\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this$1.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this$1.origin[0], -this$1.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this$1.origin[0], -this$1.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this$1.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this$1.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var this$1 = this;\n\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this$1.origin[0], -this$1.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, nextStyle);\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        lineWidth: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *  opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = (function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array.<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this$1.anchorX = anchorX - currX;\n            this$1.anchorY = anchorY - currY;\n            this$1.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this$1.originY = charInfo.offsetY;\n            this$1.height = glyphAtlas.height;\n            this$1.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this$1.imageHeight = image.height;\n            this$1.imageWidth = image.width;\n\n            if (this$1.images_.length === 0) {\n              this$1.images_.push(image);\n            } else {\n              var currentImage = this$1.images_[this$1.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this$1.groupIndices.push(this$1.indices.length);\n                this$1.images_.push(image);\n              }\n            }\n\n            this$1.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this$1.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array.<string>} lines Label to draw split to lines.\n   * @return {Array.<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this$1.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array.<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = (function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string,\n     *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @param {module:ol/style/Style} style Style.\n   * @param {boolean} group Group with previous replay.\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (style, group) {};\n\n  /**\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var this$1 = this;\n\n    var functions = [];\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n      var this$1 = this;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this$1, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var this$1 = this;\n\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      /**\n       * @type {Function}\n       */\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\nvar WebGLImmediateRenderer = (function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\n//# sourceMappingURL=defaultmapshader.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/Layer\n */\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\nvar WebGLLayerRenderer = (function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/renderer/webgl/Map}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {};\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      var coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      var imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      var pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = (function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('CANVAS'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Context}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/PriorityQueue.<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {number} Priority.\n       * @this {module:ol/renderer/webgl/Map}\n       */\n      (function(element) {\n        var tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {module:ol/Tile} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {module:ol/Tile} */ (element[0]);\n            var tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, tile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var this$1 = this;\n\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this$1.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this$1.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this$1.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this$1.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {module:ol/webgl/Context} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array.<module:ol/layer/Layer~State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      layerState = layerStatesToDraw[i];\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var this$1 = this;\n\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\n//# sourceMappingURL=tilelayershader.js.map","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Fragment}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Vertex}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var this$1 = this;\n\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object.<number, Object.<string, module:ol/Tile>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array.<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this$1.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {module:ol/Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?module:ol/layer/Layer~State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object.<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/webgl/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    };\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n   *     styles.\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = (function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\n//# sourceMappingURL=WebGLMap.js.map","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorImageTile} from './VectorImageTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\nexport {default as WebGLMap} from './WebGLMap.js';\n\nexport {getUid, inherits, VERSION} from './util.js';\n\n\n//# sourceMappingURL=index.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutter = function getGutter (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array.<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array.<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array.<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutter = function getGutter (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutterInternal();\n    }\n  };\n\n  /**\n   * @protected\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutterInternal = function getGutterInternal () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   */\n  IconImage.prototype.determineTainting_ = function determineTainting_ () {\n    var context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @type {boolean}\n     */\n    var snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      snapToPixel: snapToPixel,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      snapToPixel: this.getSnapToPixel(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array.<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array.<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array.<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    VectorLayer.call(this, baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","\n/**\n * @module ol/layer\n */\n\nexport {default as Group} from './layer/Group.js';\nexport {default as Heatmap} from './layer/Heatmap.js';\nexport {default as Image} from './layer/Image.js';\nexport {default as Layer} from './layer/Layer.js';\nexport {default as Tile} from './layer/Tile.js';\nexport {default as Vector} from './layer/Vector.js';\nexport {default as VectorTile} from './layer/VectorTile.js';\n\n//# sourceMappingURL=layer.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = (function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {module:ol/proj/Projection} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var zoom = frameState.viewState.zoom;\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = (function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      state: SourceState.LOADING,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object.<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = (function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array.<module:ol/Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {module:ol/geom/Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n      assert(geometry instanceof Point,\n        10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {module:ol/source/Vector} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    var this$1 = this;\n\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object.<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature).toString() in clustered)) {\n        var geometry = this$1.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this$1.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor).toString();\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this$1.features.push(this$1.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array.<module:ol/Feature>} features Features\n   * @return {module:ol/Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var this$1 = this;\n\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this$1.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array.<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {};\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = (function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = (function (ImageSource) {\n  function ImageCanvasSource(options) {\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {module:ol/source/ImageCanvas~FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {module:ol/ImageCanvas}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_(\n      extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = (function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object.<string, string|number>} params Request parameters.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = (function (ImageSource) {\n  function Static(options) {\n    var imageExtent = options.imageExtent;\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = (function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = (function (ImageSource) {\n  function RasterSource(options) {\n    var this$1 = this;\n\n    ImageSource.call(this, {});\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Raster~RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/canvas/Layer>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this$1.renderers_[r], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {module:ol/PluggableMap~FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {module:ol/ImageCanvas}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {module:ol/View~State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {module:ol/source/Raster~Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {module:ol/extent~Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {module:ol/proj/Projection} projection The view projection.\n   * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var this$1 = this;\n\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this$1.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var this$1 = this;\n\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this$1.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  var renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = (function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = (function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileExtent = tileGrid.getTileCoordExtent(\n      tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    var baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = (function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {module:ol/size~Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = (function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON.bounds !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    var minZoom = tileJSON.minzoom || 0;\n    var maxZoom = tileJSON.maxzoom || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = (function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutterInternal = function getGutterInternal () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\nexport var CustomTile = (function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLImageElement} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  var xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  var yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  var code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  var data = null;\n  if (code in this.keys_) {\n    var id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      var client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  var client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    var response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = (function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n  return UTFGrid;\n}(TileSource));\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  var client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    var response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    var tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var sourceProjection = this.getProjection();\n  var extent;\n  if (tileJSON.bounds !== undefined) {\n    var transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  var minZoom = tileJSON.minzoom || 0;\n  var maxZoom = tileJSON.maxzoom || 22;\n  var tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  var grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    var attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  var tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    var tileCoord = [z, x, y];\n    var urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    var tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  var tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = (function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array.<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array.<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  var resolutions = [];\n  /** @type {!Array.<string>} */\n  var matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  var origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  var tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = (function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {module:ol/source/WMTSRequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  return WMTS;\n}(TileImage));\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  var this$1 = this;\n\n  var i = 0;\n  var res = [];\n  for (var key in this$1.dimensions_) {\n    res[i++] = key + '-' + this$1.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n * @this {module:ol/source/WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = this.tileGrid;\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, this.dimensions_);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n\nexport default WMTS;\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = (function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getImage = function() {\n  if (this.zoomifyImage_) {\n    return this.zoomifyImage_;\n  }\n  var image = ImageTile.prototype.getImage.call(this);\n  if (this.state == TileState.LOADED) {\n    var tileSize = this.tileSize_;\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\n      this.zoomifyImage_ = image;\n      return image;\n    } else {\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n  } else {\n    return image;\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = (function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {module:ol/Tile~UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n//# sourceMappingURL=source.js.map","\n\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport ImageLayer from 'ol/layer/Image';\nimport Projection from \"ol/proj/Projection\";\nimport {get as getProjection} from \"ol/proj\";\nimport OSM from \"ol/source/OSM\";\nimport XYZ from \"ol/source/XYZ\";\nimport Graticule from \"ol/Graticule\";\n\n\nimport Polygon from \"ol/geom/Polygon\";\nimport Feature from \"ol/Feature\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Vector as VectorSource } from \"ol/source\";\nimport Static from 'ol/source/ImageStatic';\n\n\nlet eqrecExtent = getProjection('EPSG:4326').getExtent();\nlet offsetExtent = [-180 + 197, -90, 180 + 197, 90];\n\nlet offsetProj = new Projection({\n\taxisOrientation: 'neu',\n\tcode: 'FGIS:1001',\n\textent: offsetExtent,\n\tworldExtent: offsetExtent,\n\tglobal: true,\n\tunits: 'degrees',\n\tcanWarpX: true\n});\n\nlet eqrecProj = new Projection({\n\taxisOrientation: 'neu',\n\tcode: 'FGIS:1001',\n\textent: eqrecExtent,\n\tworldExtent: eqrecExtent,\n\tglobal: true,\n\tunits: 'degrees',\n\tcanWarpX: true\n});\n\nlet bordersTransform = [0,0];\nlet bordersOffset = [100, 0];\nlet offsetBordersExtent = [ eqrecExtent[0] + bordersOffset[0], eqrecExtent[1] + bordersOffset[1], eqrecExtent[2] - bordersTransform[0] + bordersOffset[0], eqrecExtent[3] - bordersTransform[1] + bordersOffset[1]];\n\nconsole.log(\"Offset : \", offsetBordersExtent);\nconsole.log(\"Proj. extent : \", offsetProj.getExtent());\nconsole.log(offsetProj);\n\n\nconst map = new Map({\n    target: 'map-container',\n    layers: [\n        new TileLayer({\n            source: new XYZ({\n                //url: 'http://ksp.deringenieur.net/kmaps/tiles/kerbin/sat/{z}/{x}/{-y}.png',\n                tileUrlFunction: function (coordinate) {\n\n                    if (coordinate === null) return undefined;\n\n                    //console.log('Zoom: ' + coordinate[0] + '(t:' + (coordinate[0]-1) + ', Tile: (' + coordinate[1] + ',' + -coordinate[2] + ')')\n                    // TMS Style URL\n                    var z = coordinate[0] - 1;\n                    var x = coordinate[1];\n                    var y = coordinate[2] + Math.pow(2, z);\n                    var url = 'http://tiles-arii.herrcrazidev.tk/tiles/kerbin/sat/' + z + '/' + x + '/' + y + '.png';\n\n                    return url;\n                },\n                projection: offsetProj,\n                //extent: eqrecExtent\n            }),\n           \t//extent: eqrecExtent\n        }),\n        \n        new ImageLayer({\n        \tsource: new Static({\n        \t\turl: 'http://tiles-arii.herrcrazidev.tk/raster/kp/borders.png',\n        \t\tprojection: offsetProj, //'EPSG:4326',\n        \t\timageExtent: [-227.8,-90+2,580,90+2-4],\n\t\t\t    imageSize: [0,0,4700,2000]\n        \t}),\n        })\n    ],\n\n    view: new View({\n        center: [0,0],\n        //extent: [0,-90,360,90],\n        zoom: 2.3,\n        minZoom: 1,\n        maxZoom: 6,\n        projection: eqrecProj //'EPSG:4326'\n    })\n});\n\nconst graticule = new Graticule({\n\tmap: map,\n\tshowLabels: false\n})\n\nconsole.log(eqrecExtent);\n\n"]}